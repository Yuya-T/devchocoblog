<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>いたちょこブログ</title>
    <link>https://blog.itachoco.dev/</link>
    <description>Recent content on いたちょこブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Tue, 08 Oct 2019 10:24:42 +0900</lastBuildDate>
    
	<atom:link href="https://blog.itachoco.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web開発ほぼ未経験でChrome Extensionを開発した話</title>
      <link>https://blog.itachoco.dev/posts/chrome-extension/</link>
      <pubDate>Tue, 08 Oct 2019 10:24:42 +0900</pubDate>
      
      <guid>https://blog.itachoco.dev/posts/chrome-extension/</guid>
      <description>Chrome Extension とは Chromeにインストールする拡張機能です(そのまま)． インストールすると右上にアイコンが追加されたりしますね．
開発の流れ  manifest.json を記述する これは拡張機能の名前やバージョン，機能などを定義するファイルです． お作法に従って書きます． コードを書く Chrome上で動かすので基本的にWebの技術しか使いません． 画面が必要ならフロントエンドの開発と全く同じ要領で開発できます． 当然，ReactだろうとVeu.jsだろうと何でも使えます． バックグラウンド動作はスクリプトを書くのと全く変わりません． ただし，少し違うのはChrome独自のAPIを使えることです． 何ができるのかはドキュメントをご覧ください． 通知を出したり定時実行したり，かなり豊富なAPIが用意されています． アプリストアで公開する  以上！ 超簡単！ (簡単だったとは言ってない)
今回使った技術 今回作った拡張機能は以下の技術を使って開発しました．
 TypeScript React Sass  アーキテクチャーとして，Reactと相性の良いFluxを採用しました．
ハマったポイント  npm install @types/hoge が必要 TypeScriptを使っているので型が必要だが，JavaScriptで書かれたライブラリには型宣言がない． そのため上記コマンドで型を導入する必要がある． これを行わないと，ライブラリは認識されないためコンパイルが失敗する．
 tsconfig.json の設定 Node.jsを使っているなら &amp;quot;moduleResolution&amp;quot;: &amp;quot;node&amp;quot; に設定するのを忘れないように． さもないとライブラリが認識されない． これで軽く $n$ 日は溶かした．
 manifest.json にURLを指定する アクセス先のドメインを指定していなかったので chrome.identity.launchWebAuthFlow で拡張機能へ戻ってこれなかった． CORS のエラーで落ちる． hogehoge.com へアクセスするなら *://*.hogehoge.com/* を permissions に追加すればサブドメインなどへもアクセス可能．
 manifest.json に独自データを載せられる APIキーなどを記述しておくと便利だった． コード中には記述したくないので悩んでいた．</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>https://blog.itachoco.dev/portfolio/</link>
      <pubDate>Sat, 05 Oct 2019 20:20:34 +0900</pubDate>
      
      <guid>https://blog.itachoco.dev/portfolio/</guid>
      <description>WeatherCast 気象庁の予報データを使用した天気予報アプリです．
【アプリの特徴】
 Material Designに準拠 3時間ごとの天気予報に対応 週間天気予報に対応 発令中の特別警報・警報・注意報を表示 地震・台風情報を表示 1時間後までの雨雲の動きをチェック 現在地の天気予報をすぐに確認  Android 6.0以上の端末に対応しています．</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://blog.itachoco.dev/about/</link>
      <pubDate>Sat, 05 Oct 2019 18:20:47 +0900</pubDate>
      
      <guid>https://blog.itachoco.dev/about/</guid>
      <description>でぶちょこ 情報検索が専門の大学院生． もうすぐ退院する予定．
趣味で Android アプリを開発しています． iOS アプリの開発にも興味があります．
最近 Flutter に入門しました．
できること  Kotlin Python TypeScript Java Ruby  &amp;ndash;
 Android Firebase AWS Lambda Chrome Extension  &amp;ndash;
 スクレイピング  このサイトについて 日々の開発で得られた知見をアウトプットする場所．
Android の話が中心ですが，色んな技術に興味があるので他のことも書くかもしれません．</description>
    </item>
    
  </channel>
</rss>